@model IEnumerable<DataFile>

@using (Html.BeginForm("UploadChannels", "Csv", FormMethod.Post, new { @class = "m-t-3", id = "uploadForm", enctype="multipart/form-data" }))
{
    <div class="form-group">        
        <div class="col-lg-4">
            <input class="form-control" type="file" name="file" size="40" placeholder="Load Channels" />
        </div>        
        <div class="col-lg-4">
            <input class="form-control" type="text" name="dollarToEuro" size="40" placeholder="Dollar To Euro Change" />
        </div>
        <div class="col-lg-4">
            <a href="javasctipt:{}" onclick="document.getElementById('uploadForm').submit(); return false;" role="button" class="btn btn-block m-b-2 btn-primary">Upload</a>
        </div>                      
    </div>

    <div class="row">
        <div class="col-xs-12">
            <h2 class="m-b-2 m-t-0 f-w-300">Latest Files</h2>
        </div>
    </div>


    <script src="~/assets/vendor/js/jquery.dataTables.min.js"></script>
    <script src="~/assets/vendor/js/dataTables.bootstrap.min.js"></script>

    <script language="javascript">
        $(document).ready(function () {
            $('#userTable').DataTable();
        });
    </script>


    <table class="table table-condensed table-hover table-striped" id="userTable">
        <thead>
            <tr>
                <th class="small text-muted text-uppercase">
                    <strong>
                        File Name
                    </strong>
                </th>
                <th class="small text-muted text-uppercase">
                    <strong>Upload Date</strong>
                </th>
                <th class="small text-muted text-uppercase">
                    <strong>New Channels</strong>
                </th>
                <th class="small text-muted text-uppercase">
                    <strong>Unactive Channels</strong>
                </th>
                <th class="small text-muted text-uppercase">
                    <strong>Total Channels</strong>
                </th>
                <th class="small text-muted text-uppercase">
                    <strong>Conversion Rate</strong>
                </th>
                <th class="small text-muted text-uppercase">
                    <strong>Network Traffic Performance (€)</strong>
                </th>
                <th class="small text-muted text-uppercase">
                    <strong>Network Traffic Total (€)</strong>
                </th>
                <th class="small text-muted text-uppercase">
                    <strong>Processing Type</strong>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @item.Name
                    </td>
                    <td>
                        @item.UploadDate.ToShortDateString()
                    </td>
                    <td>
                        @item.NewChannels
                    </td>
                    <td>
                        @item.UnactiveChannels
                    </td>
                    <td>
                        @item.TotalChannels
                    </td>
                    <td>
                        @{
                            string conversionRate = item.DollarToEuroConv.HasValue ? item.DollarToEuroConv.Value.ToString("0.0000") : "-";
                        }

                        @conversionRate
                    </td>
                    <td>
                        @{ 
                            string trafficIncomeNet = item.TrafficIncomeNetwork.HasValue ? item.TrafficIncomeNetwork.Value.ToString("0.00") : "-";
                        }

                        @trafficIncomeNet
                    </td>
                    <td>
                        @{
                            string trafficIncomeTot = item.TrafficIncomeTotal.HasValue ? item.TrafficIncomeTotal.Value.ToString("0.00") : "-";
                        }

                        @trafficIncomeTot
                    </td>
                    <td>
                        @{
                            string procType;

                            if (item.ProcessingType == (byte)ProcessingType.ChannelListUpdate)
                            {
                                procType = "Channel List Update";
                            }
                            else if (item.ProcessingType == (byte)ProcessingType.PaidFeatures)
                            {
                                procType = "Paid Features Update";
                            }
                            else if (item.ProcessingType == (byte)ProcessingType.TrafficRevenueUpdate)
                            {
                                procType = "Traffic Revenues Update";
                            }
                            else
                            {
                                procType = "Unknow Processing Type";
                            }
                         }            
                        
                        @procType
                    </td>
                </tr>
                            }
        </tbody>
    </table>    
}
    

 